{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server server.",
        "title": "Gin Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "2.0"
    },
    "host": "localhost:5000",
    "basePath": "/namespaces",
    "paths": {
        "/namespaces": {
            "post": {
                "description": "Create a new namespace in the cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new namespace.",
                "parameters": [
                    {
                        "description": "Namespace name",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Namespace"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Namespace"
                        }
                    }
                }
            }
        },
        "/namespaces/": {
            "get": {
                "description": "Get all namespaces and all Pods in a cluster.",
                "produces": [
                    "application/json"
                ],
                "summary": "List namespaces in a K8s cluster.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Namespace"
                            }
                        }
                    }
                }
            }
        },
        "/namespaces/{name}": {
            "get": {
                "description": "Get Pods in a namespace.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a K8s namespace and it's Pods.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Namespace name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Namespace"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.Namespace": {
            "description": "Namespace information",
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "https://github.com/go-playground/validator and https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#dns-subdomain-names",
                    "type": "string"
                },
                "pods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.Pod"
                    }
                }
            }
        },
        "main.Pod": {
            "description": "Pod information",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}